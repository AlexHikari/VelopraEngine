# Core/CMakeLists.txt
cmake_minimum_required(VERSION 3.8)
project(VelopraCore)

set(CORE_SOURCE_FILES
    src/VE_Core.cpp
    src/VE_Event.cpp
    src/VE_EventBus.cpp
    src/VE_EventQueue.cpp
    src/VE_KeyboardEvent.cpp
    src/VE_Layer.cpp
    src/VE_LayerStack.cpp
    src/VE_Logger.cpp
    src/VE_Math.cpp
    src/VE_Memory.cpp
    src/VE_MouseEvent.cpp
    src/VE_Time.cpp
    src/VE_Utility.cpp
    src/VE_WindowEvent.cpp
)
set(CORE_HEADER_FILES
    include/VE_Core.h
    include/VE_CoreAPI.h
    include/VE_Event.h
    include/VE_EventBus.h
    include/VE_EventQueue.h
    include/VE_IEventSubscriber.h
    include/VE_KeyboardEvent.h
    include/VE_Layer.h
    include/VE_LayerStack.h
    include/VE_Logger.h
    include/VE_LoggerMacros.h
    include/VE_Math.h
    include/VE_Memory.h
    include/VE_MouseEvent.h
    include/VE_Time.h
    include/VE_Types.h
    include/VE_Utility.h
    include/VE_WindowEvent.h
)

# Add library target for the Core module with the collected source files
find_package(spdlog REQUIRED)

add_library(VelopraCore ${CORE_SOURCE_FILES} ${CORE_HEADER_FILES})

# Define BUILDING_VELOPRACORE_DLL when building as a shared library
if(BUILD_SHARED_LIBS)
    target_compile_definitions(VelopraCore PRIVATE BUILDING_VELOPRACORE_DLL)
endif()

target_link_libraries(VelopraCore PUBLIC spdlog::spdlog)
target_include_directories(VelopraCore PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)

